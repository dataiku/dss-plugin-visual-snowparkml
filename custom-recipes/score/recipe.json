{
    "meta": {
        "label": "Visual SnowparkML Score",
        "description": "<b style=\"color:#29B5E8; font-size: medium;\">Train Machine Learning Models on Snowpark </b>\n \
<b>Requirements: </b>\n \
- Build the code environment included in this plugin \
- In addition, create another python 3.8 code environment called 'py_38_snowpark' with the python packages listed here:  \
- All columns must be UPPER_CASE \
- If doing two-class classification + XGBoost, convert your target column to numeric (0,1) before this recipe (XGBoost requirement) \
- No int type columns can have missing values. If you have an int column with missing values, convert the type to double before this recipe. (MLflow requirement) \
- If you want to treat a numeric column as categorical, change its storage type to string in a prior recipe",
        "icon": "icon-snowflake",
        "iconColor": "blue"
    },

    "kind": "PYTHON",

    "inputRoles": [
        {
            "name": "input_dataset_name",
            "label": "Dataset to Score",
            "description": "Must have all features used to train the model",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        },
        {
            "name": "saved_model_name",
            "label": "Saved Model",
            "description": "Model to make predictions - Must have been trained using Snowpark ML Train recipe",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": false,
            "acceptsSavedModel": true
        }
    ],

    "outputRoles": [
        {
            "name": "output_score_dataset_name",
            "label": "Scored Dataset Output",
            "description": "Dataset to Score with Model Predictions",
            "arity": "UNARY",
            "required": true,
            "acceptsDataset": true
        }
    ],
    "params": [
        {
            "name": "snowflake_warehouse",
            "label": "Snowflake Warehouse",
            "type": "STRING",
            "description": "If empty, use Snowflake connection default warehouse"
        }
    ],    
    "selectableFromDataset": "input_dataset_name",
    "selectableFromSavedModel": "saved_model_name",

    "resourceKeys": []

}
